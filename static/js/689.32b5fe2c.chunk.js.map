{"version":3,"file":"static/js/689.32b5fe2c.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/TMDBapi.js"],"sourcesContent":["import { RevolvingDot } from \"react-loader-spinner\";\n\nconst Loader = () => (\n    <RevolvingDot\n  height=\"100\"\n  width=\"100\"\n  radius=\"6\"\n  color=\"#4fa94d\"\n  secondaryColor=''\n  ariaLabel=\"revolving-dot-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n/>\n)\n\nexport default Loader","// extracted by mini-css-extract-plugin\nexport default {\"h1\":\"MoviesList_h1__hJUKD\",\"list\":\"MoviesList_list__0Owr9\",\"listItem\":\"MoviesList_listItem__LULLo\",\"link\":\"MoviesList_link__8rTGX\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ listTitle, moviesList }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {listTitle && <h1 className={css.h1}>{listTitle}</h1>}\n      <ul className={css.list}>\n        {moviesList.map(({ id, title }) => (\n          <li className={css.listItem} key={id}>\n            <Link\n              className={css.link}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  listTitle: PropTypes.string,\n  moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"input\":\"SearchBar_input__bIy50\",\"formBtn\":\"SearchBar_formBtn__Z+YNJ\"};","import css from './SearchBar.module.css';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ onSubmit }) => {\n  return (\n    <form className={css.form} onSubmit={onSubmit}>\n      <input className={css.input} name=\"query\"></input>\n      <button className={css.formBtn} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"Movies_movies__TE99a\"};","import SearchBar from 'components/SearchBar/SearchBar';\nimport css from './Movies.module.css';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/TMDBapi';\nimport Loader from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query === null) return;\n    setIsLoading(true);\n    const getByQuery = async query => {\n      const newByQuery = await getMoviesByQuery(query);\n      setSearchedMovies(newByQuery.results);\n      setIsLoading(false);\n    };\n    getByQuery(query);\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formDOM = e.currentTarget;\n    const inputQuery = formDOM.elements.query.value.trim();\n\n    if (inputQuery === '') {\n      alert(`Please type anything`);\n      return;\n    }\n\n    setSearchParams({ query: inputQuery });\n    formDOM.reset();\n  };\n\n  return (\n    <div className={css.movies}>\n      <SearchBar onSubmit={handleSubmit} />\n      {isLoading && <Loader />}\n      {searchedMovies && (\n        <MoviesList listTitle=\"\" moviesList={searchedMovies} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'ce40982cf9288342bd5c4fc77432b9de';\nconst API_KEY = `api_key=${KEY}&language=en-US`;\n\nexport const getTrendingMovies = async () => {\n  const url = `trending/movie/day?api_key=${KEY}`;\n  const response = await axios.get(url);\n  return response.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const url = `search/movie?${API_KEY}&query=${query}&page=1&include_adult=false`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getMovieDetailsByMovieId = async id => {\n  const url = `movie/${id}?${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getMovieCastByMovieId = async id => {\n  const url = `movie/${id}/credits?${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data.cast;\n};\n\nexport const getMovieReviewsByMovieId = async id => {\n  const url = `movie/${id}/reviews?${API_KEY}&page=1`;\n  const response = await axios.get(url);\n  return response.data.results;\n};\n\nconst TMDBapi = {\n  getTrendingMovies,\n  getMoviesByQuery,\n  getMovieDetailsByMovieId,\n  getMovieCastByMovieId,\n  getMovieReviewsByMovieId,\n};\n\nexport default TMDBapi;\n"],"names":["height","width","radius","color","secondaryColor","ariaLabel","wrapperStyle","wrapperClass","visible","listTitle","moviesList","location","useLocation","className","css","map","id","title","to","state","from","onSubmit","name","type","useState","searchedMovies","setSearchedMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getByQuery","getMoviesByQuery","newByQuery","results","e","preventDefault","formDOM","currentTarget","inputQuery","elements","value","trim","reset","alert","Loader","MoviesList","axios","KEY","API_KEY","getTrendingMovies","url","response","data","getMovieDetailsByMovieId","getMovieCastByMovieId","cast","getMovieReviewsByMovieId"],"sourceRoot":""}