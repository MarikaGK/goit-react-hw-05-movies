{"version":3,"file":"static/js/389.1145dca5.chunk.js","mappings":"gNACA,GAAgB,QAAU,sBAAsB,KAAO,oB,kBCAvD,EAA0B,0BAA1B,EAA0D,sBAA1D,EAAuF,uBAAvF,EAA0H,4B,SCoB1H,EAlBiB,SAAC,GAAD,IAAGA,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,IAApB,OACf,iBAAKC,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXC,IACEH,EAAG,8CACwCA,GACvC,2DAENI,IAAKL,KAEP,4BACE,cAAGE,UAAWC,EAAd,SAAyBH,KACzB,cAAGE,UAAWC,EAAd,SAA8BJ,SAbnB,EC4BjB,EAzBa,WACX,OAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,WAAMC,GAAN,wFACQC,EAAAA,EAAAA,IAAsBD,GAD9B,OACRE,EADQ,OAEdP,EAAQO,GAFM,2CAAH,sDAIbH,EAAQH,EACT,GAAE,CAACA,KAGF,gBAAKP,UAAWC,EAAAA,QAAhB,UACE,eAAID,UAAWC,EAAAA,KAAf,SACGI,EAAKS,KAAI,gBAAGjB,EAAH,EAAGA,UAAWkB,EAAd,EAAcA,UAAWjB,EAAzB,EAAyBA,KAAMkB,EAA/B,EAA+BA,aAA/B,OACR,eAAIhB,UAAWC,EAAAA,SAAf,UACE,SAAC,EAAD,CAAUH,KAAMA,EAAMD,UAAWA,EAAWE,IAAKiB,KADjBD,EAD1B,OAQjB,C,+LC3BDE,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCACNC,EAAO,kBAAcD,EAAd,mBAEAE,EAAiB,mCAAG,6FACzBC,EADyB,qCACWH,GADX,SAERD,EAAAA,EAAAA,IAAUI,GAFF,cAEzBC,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,qDAMjBC,EAAgB,mCAAG,WAAMC,GAAN,gFACxBL,EADwB,uBACFF,EADE,kBACeO,EADf,wCAEPT,EAAAA,EAAAA,IAAUI,GAFH,cAExBC,EAFwB,yBAGvBA,EAASC,MAHc,2CAAH,sDAMhBI,EAAwB,mCAAG,WAAMhB,GAAN,gFAChCU,EADgC,gBACjBV,EADiB,YACXQ,GADW,SAEfF,EAAAA,EAAAA,IAAUI,GAFK,cAEhCC,EAFgC,yBAG/BA,EAASC,MAHsB,2CAAH,sDAMxBX,EAAqB,mCAAG,WAAMD,GAAN,gFAC7BU,EAD6B,gBACdV,EADc,oBACAQ,GADA,SAEZF,EAAAA,EAAAA,IAAUI,GAFE,cAE7BC,EAF6B,yBAG5BA,EAASC,KAAKlB,MAHc,2CAAH,sDAMrBuB,EAAwB,mCAAG,WAAMjB,GAAN,gFAChCU,EADgC,gBACjBV,EADiB,oBACHQ,EADG,oBAEfF,EAAAA,EAAAA,IAAUI,GAFK,cAEhCC,EAFgC,yBAG/BA,EAASC,KAAKC,SAHiB,2CAAH,qD","sources":["webpack://movie-watcher/./src/components/Cast/Cast.module.css?c9ee","webpack://movie-watcher/./src/components/CastItem/CastItem.module.css?d4dc","components/CastItem/CastItem.jsx","components/Cast/Cast.jsx","services/TMDBapi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Cast_wrapper__XmIBi\",\"list\":\"Cast_list__GlWio\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CastItem_wrapper__YLQmg\",\"img\":\"CastItem_img__3cwBG\",\"name\":\"CastItem_name__jzNo7\",\"character\":\"CastItem_character__YJjgu\"};","import PropTypes from 'prop-types';\nimport css from './CastItem.module.css';\n\nconst CastItem = ({ character, name, img }) => (\n  <div className={css.wrapper}>\n    <img\n      className={css.img}\n      src={\n        img\n          ? `https://www.themoviedb.org/t/p/w500/${img}`\n          : 'https://www.freeiconspng.com/uploads/no-image-icon-6.png'\n      }\n      alt={name}\n    />\n    <div>\n      <p className={css.name}>{name}</p>\n      <p className={css.character}>{character}</p>\n    </div>\n  </div>\n);\n\nexport default CastItem;\n\nCastItem.propTypes = {\n  character: PropTypes.string,\n  name: PropTypes.string,\n  img: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport css from './Cast.module.css';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCastByMovieId } from 'services/TMDBapi';\nimport CastItem from 'components/CastItem/CastItem';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCast = async id => {\n      const newCast = await getMovieCastByMovieId(id);\n      setCast(newCast);\n    };\n    getCast(movieId);\n  }, [movieId]);\n\n  return (\n    <div className={css.wrapper}>\n      <ul className={css.list}>\n        {cast.map(({ character, credit_id, name, profile_path }) => (\n          <li className={css.listItem} key={credit_id}>\n            <CastItem name={name} character={character} img={profile_path} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'ce40982cf9288342bd5c4fc77432b9de';\nconst API_KEY = `api_key=${KEY}&language=en-US`;\n\nexport const getTrendingMovies = async () => {\n  const url = `trending/movie/day?api_key=${KEY}`;\n  const response = await axios.get(url);\n  return response.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const url = `search/movie?${API_KEY}&query=${query}&page=1&include_adult=false`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getMovieDetailsByMovieId = async id => {\n  const url = `movie/${id}?${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getMovieCastByMovieId = async id => {\n  const url = `movie/${id}/credits?${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data.cast;\n};\n\nexport const getMovieReviewsByMovieId = async id => {\n  const url = `movie/${id}/reviews?${API_KEY}&page=1`;\n  const response = await axios.get(url);\n  return response.data.results;\n};\n\nconst TMDBapi = {\n  getTrendingMovies,\n  getMoviesByQuery,\n  getMovieDetailsByMovieId,\n  getMovieCastByMovieId,\n  getMovieReviewsByMovieId,\n};\n\nexport default TMDBapi;\n"],"names":["character","name","img","className","css","src","alt","useState","cast","setCast","movieId","useParams","useEffect","getCast","id","getMovieCastByMovieId","newCast","map","credit_id","profile_path","axios","KEY","API_KEY","getTrendingMovies","url","response","data","results","getMoviesByQuery","query","getMovieDetailsByMovieId","getMovieReviewsByMovieId"],"sourceRoot":""}