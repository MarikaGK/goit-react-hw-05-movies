{"version":3,"file":"static/js/936.d085a9cd.chunk.js","mappings":"wIAgBA,IAde,kBACX,SAAC,KAAD,CACFA,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,UACNC,eAAe,GACfC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,GAVI,C,2ECDf,EAAqB,uBAArB,EAAmD,yBAAnD,EAAuF,6BAAvF,EAA2H,yB,SC0B3H,EAvBmB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WACzBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gCACGH,IAAa,eAAII,UAAWC,EAAf,SAAwBL,KACtC,eAAII,UAAWC,EAAf,SACGJ,EAAWK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACd,eAAIJ,UAAWC,EAAf,UACE,SAAC,KAAD,CACED,UAAWC,EACXI,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMT,GAHjB,SAKGM,KAN6BD,EADpB,QAcvB,C,2GCxBD,EAAuB,mB,6CC8BvB,EAzBa,WACX,OAAkCK,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAW,mCAAG,qGACQC,EAAAA,EAAAA,MADR,OACZC,EADY,OAElBJ,EAAYI,GACZN,GAAa,GAHK,2CAAH,qDAKjBI,GACD,GAAE,KAGD,gBAAKd,UAAWC,EAAhB,SACGQ,GACC,SAACQ,EAAA,EAAD,KAEA,SAACC,EAAA,EAAD,CAAYtB,UAAU,iBAAiBC,WAAYc,KAI1D,C,+LC3BDQ,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCACNC,EAAO,kBAAcD,EAAd,mBAEAL,EAAiB,mCAAG,6FACzBO,EADyB,qCACWF,GADX,SAERD,EAAAA,EAAAA,IAAUG,GAFF,cAEzBC,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,qDAMjBC,EAAgB,mCAAG,WAAMC,GAAN,gFACxBL,EADwB,uBACFD,EADE,kBACeM,EADf,wCAEPR,EAAAA,EAAAA,IAAUG,GAFH,cAExBC,EAFwB,yBAGvBA,EAASC,MAHc,2CAAH,sDAMhBI,EAAwB,mCAAG,WAAMzB,GAAN,gFAChCmB,EADgC,gBACjBnB,EADiB,YACXkB,GADW,SAEfF,EAAAA,EAAAA,IAAUG,GAFK,cAEhCC,EAFgC,yBAG/BA,EAASC,MAHsB,2CAAH,sDAMxBK,EAAqB,mCAAG,WAAM1B,GAAN,gFAC7BmB,EAD6B,gBACdnB,EADc,oBACAkB,GADA,SAEZF,EAAAA,EAAAA,IAAUG,GAFE,cAE7BC,EAF6B,yBAG5BA,EAASC,KAAKM,MAHc,2CAAH,sDAMrBC,EAAwB,mCAAG,WAAM5B,GAAN,gFAChCmB,EADgC,gBACjBnB,EADiB,oBACHkB,EADG,oBAEfF,EAAAA,EAAAA,IAAUG,GAFK,cAEhCC,EAFgC,yBAG/BA,EAASC,KAAKC,SAHiB,2CAAH,qD","sources":["components/Loader/Loader.js","webpack://movie-watcher/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://movie-watcher/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/TMDBapi.js"],"sourcesContent":["import { RevolvingDot } from \"react-loader-spinner\";\n\nconst Loader = () => (\n    <RevolvingDot\n  height=\"100\"\n  width=\"100\"\n  radius=\"6\"\n  color=\"#4fa94d\"\n  secondaryColor=''\n  ariaLabel=\"revolving-dot-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n/>\n)\n\nexport default Loader","// extracted by mini-css-extract-plugin\nexport default {\"h1\":\"MoviesList_h1__hJUKD\",\"list\":\"MoviesList_list__0Owr9\",\"listItem\":\"MoviesList_listItem__LULLo\",\"link\":\"MoviesList_link__8rTGX\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ listTitle, moviesList }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {listTitle && <h1 className={css.h1}>{listTitle}</h1>}\n      <ul className={css.list}>\n        {moviesList.map(({ id, title }) => (\n          <li className={css.listItem} key={id}>\n            <Link\n              className={css.link}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  listTitle: PropTypes.string,\n  moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"Home_home__CMw1J\"};","import css from './Home.module.css';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/TMDBapi';\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [trending, setTrending] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getTrending = async () => {\n      const newTrending = await getTrendingMovies();\n      setTrending(newTrending);\n      setIsLoading(false);\n    };\n    getTrending();\n  }, []);\n\n  return (\n    <div className={css.home}>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <MoviesList listTitle=\"Trending today\" moviesList={trending} />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'ce40982cf9288342bd5c4fc77432b9de';\nconst API_KEY = `api_key=${KEY}&language=en-US`;\n\nexport const getTrendingMovies = async () => {\n  const url = `trending/movie/day?api_key=${KEY}`;\n  const response = await axios.get(url);\n  return response.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const url = `search/movie?${API_KEY}&query=${query}&page=1&include_adult=false`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getMovieDetailsByMovieId = async id => {\n  const url = `movie/${id}?${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getMovieCastByMovieId = async id => {\n  const url = `movie/${id}/credits?${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data.cast;\n};\n\nexport const getMovieReviewsByMovieId = async id => {\n  const url = `movie/${id}/reviews?${API_KEY}&page=1`;\n  const response = await axios.get(url);\n  return response.data.results;\n};\n\nconst TMDBapi = {\n  getTrendingMovies,\n  getMoviesByQuery,\n  getMovieDetailsByMovieId,\n  getMovieCastByMovieId,\n  getMovieReviewsByMovieId,\n};\n\nexport default TMDBapi;\n"],"names":["height","width","radius","color","secondaryColor","ariaLabel","wrapperStyle","wrapperClass","visible","listTitle","moviesList","location","useLocation","className","css","map","id","title","to","state","from","useState","isLoading","setIsLoading","trending","setTrending","useEffect","getTrending","getTrendingMovies","newTrending","Loader","MoviesList","axios","KEY","API_KEY","url","response","data","results","getMoviesByQuery","query","getMovieDetailsByMovieId","getMovieCastByMovieId","cast","getMovieReviewsByMovieId"],"sourceRoot":""}